#define import using namespace
#define Import using namespace

#define Dim(type) type
#define Sub void
#define sub
#define Function(type) type
#define function 
#define as {
#define As  
#define integer
#define Integer
#define Byval(type) type
#define Byref(type) type * 

#define Mod %
#define IsNot !=
#define Nothing NULL

#define If if(
#define Else End else Then
#define Elseif End else If
#define Then ) {
#define End }
#define Endif }

#define From
#define from
#define To ;__temp__<=
#define to ;__temp__>=
#define Step(i) ;__temp__+=i){
#define For for(int &__temp__=
#define Next }

#define Until while(!
#define until 
#define wend ){

#define Do while(true){
#define Loop }
#define Exitdo break
#define Exit return 
#define Sleep _sleep
#define Addressof &

#define Read(a) cin>>a
#define Write(a) cout<<a
#include <bits/stdc++.h>

</head>

Import C++:质数
bool isPn(int inp){
    if((inp%2==0&&inp!=2)||inp==1)return 0;
    int i;bool asd=true;
    int d=sqrt(inp);
    for(i=3;i<=d;i+=2){
        if(inp%i==0){
            asd=false;
            return asd;
        }
    }
    return asd;
}

Import C++ 高精正整数比较
int Hcmp(char a[],char b[]){
	int al=strlen(a),bl=strlen(b);
	if(al>bl)return 1;
	else if(bl>al)return -1;
	else return strcmp(a,b);
}

Import C++ 高精正整数加
string Hsum(char a[],char b[]){    
	int i;string h="";int ab[max(strlen(a),strlen(b))];    
	For(i,0,max(strlen(a),strlen(b))-1)ab[i]=0;    
	FFor(i,max(strlen(a),strlen(b))-1,0){        
		if(strlen(a)>strlen(b))ab[i]+=a[i]+(strlen(a)-i<=strlen(b)?b[i-(strlen(a)-strlen(b))]:48)-96;        
		else ab[i]+=(strlen(b)-strlen(a)<=i?a[i+(strlen(a)-strlen(b))]:48)+b[i]-96;        
		if(i!=0){ab[i-1]+=ab[i]/10;ab[i]%=10;}
	}
	h+=ab[0]/10+48;h+=ab[0]%10+48;    
	For(i,1,max(strlen(a),strlen(b))-1)h+=ab[i]+48;    
	return h;
}

void HIZsum(int *a,int *b,int len1,int len2,int *back){
	for(int i=0;i<=max(len1,len2);i++)back[i]+=a[i]+b[i];
	for(int i=0;i<=max(len1,len2);i++){back[i+1]+=back[i]/10;back[i]%=10;}
}//精简版，取代Hsum//逆序输入输出

Import C++ 高精正整数减
string Hsub(char a[],char b[]){ 
	int i;string h="";bool first=false;int ab[max(strlen(a),strlen(b))];
	char c[max(strlen(a),strlen(b))],d[max(strlen(a),strlen(b))];
	if(Hcmp(a,b)==1){strcpy(c,a);strcpy(d,b);}
	else if(Hcmp(a,b)==0)return "0";
	else {strcpy(d,a);strcpy(c,b);h+="-";}
	FFor(i,max(strlen(c),strlen(d))-1,0)ab[i]=0;
	FFor(i,max(strlen(c),strlen(d))-1,0){
		ab[i]+=(c[i]-((strlen(c)-strlen(d)<=i)?d[i-(strlen(c)-strlen(d))]:48));
		if(ab[i]<0){ab[i]+=10;ab[i-1]--;}
	}
	For(i,0,max(strlen(c),strlen(d))-1)if(ab[i]!=0||first){h+=ab[i]+48;first=true;}
	return h;
}

Import C++高精度正整数乘/高精正小数乘

string Hmul(char a[],char b[]){ 
	if(a[0]=='0'||b[0]=='0')return "0"; 
	int i,j,u,ab[strlen(a)+strlen(b)];
	bool first=false;string h=""; 
	For(i,0,strlen(a)+strlen(b))ab[i]=0; 
	FFor(i,strlen(a)-1,0){  
		FFor(j,strlen(b)-1,0){   
			ab[i+j+1]+=(a[i]-48)*(b[j]-48);   
			ab[i+j]+=ab[i+j+1]/10;ab[i+j+1]%=10;  
		} 
	} 
	For(u,0,strlen(a)+strlen(b)-1)if(ab[u]!=0||first){h+=(ab[u]+48);first=true;} 
return h;
}

H高精，I整，Z正整。
void HIZmul(int *a,int *b,int len1,int len2,int *back){
	for(int i=0;i<=len1-1;i++)for(int j=0;j<=len2-1;j++)back[i+j]+=a[i]*b[j];
	for(int i=0;i<=len1+len2-1;i++){back[i+1]+=back[i]/10;back[i]%=10;}
}//精简版，取代Hmul//逆序输入输出

string HDmul(char *a,char *b){
	int i,j,u;int lena=strlen(a),lenb=strlen(b);string h="";
	For(i,1,lena)if(a[lena-i]=='.')break;
	For(j,1,lenb)if(b[lenb-j]=='.')break;
	if(i==strlen(a))i=0;if(j==strlen(b))j=0;
	if(i+j==0)return Hmul(a,b);
	if(i>j){
		while(j<i){
			j++;
			b[strlen(b)]=48;
		}
	}else if(j>i){
		while(j>i){
			i++;
			a[strlen(a)]=48;
		}
	}
	For(u,strlen(a)-i,strlen(a)-2)a[u]=a[u+1];a[u]=0;
	For(u,strlen(b)-j,strlen(b)-2)b[u]=b[u+1];b[u]=0;
	h=Hmul(a,b);
	h.insert(h.size()-i-j+2,".");
	return h;
}

Import C++ 高精正整数除正Long Long
string LHdiv(char a[],long long b){
	int i,ab[strlen(a)];long long BC=0;bool first=false;string h;
	For(i,0,strlen(a)-1)ab[i]=0;
	For(i,0,strlen(a)-1){
		BC*=10;BC+=a[i]-48;
		ab[i]=BC/b;BC%=b;
	}
	For(i,0,strlen(a)-1)if(ab[i]!=0||first){h+=(ab[i]+48);first=true;}
	return h;
}
#include<bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;

#include<bits/stdc++.h>using namespace std;int mod;
union line_tree{ struct node{  long long lazy[2],num;int l,r; }tree[400000]; void push_up(int place)tree[place].num=(tree[place>>1|1].num+tree[place>>1].num)%mod; void push_down(){   } void build(int place,int down,int up){  if(up==down)return;   }};
int main(){ int a,b;cin>>a>>b>>mod; }

#include<bits/stdc++.h>
using namespace std;

int dp[6][6][6][6][6];
int obj[5][2];int sale[105][6];
int num[1000];int pt;
int main(){
	int a;cin>>a;
	for(int i=0;i<=999;i++)num[i]=-1;
	for(int i=0;i<=a-1;i++){
		int f;cin>>f;
		for(int j=0;j<=f-1;j++){int m,n;cin>>m>>n;if(num[m]==-1)num[m]=(pt++);sale[i][num[m]]=n;}
		cin>>sale[i][5];
	}
	int b;cin>>b;
	for(int i=0;i<=b-1;i++){
		int m,n,h;cin>>m>>n>>h;
		obj[num[m]][0]=n;obj[num[m]][1]=h;
	}
	for(int i=0;i<=5;i++)for(int j=0;j<=5;j++)for(int u=0;u<=5;u++)for(int v=0;v<=5;v++)for(int m=0;m<=5;m++)dp[i][j][u][v][m]=i*obj[0][1]+j*obj[1][1]+u*obj[2][1]+v*obj[3][1]+m*obj[4][1];
	for(int i=0;i<=5;i++){
		for(int j=0;j<=5;j++){
			for(int u=0;u<=5;u++){
				for(int v=0;v<=5;v++){
					for(int m=0;m<=5;m++){
						for(int n=0;n<=a-1;n++){
							if(i>=sale[n][0] and j>=sale[n][1] and u>=sale[n][2] and v>=sale[n][3] and m>=sale[n][4]){
								//dp[i][j][u][v][m]=min(dp[i][j][u][v][m],dp[i-obj[0][0]][j-obj[1][0]][u-obj[2][0]][v-obj[3][0]][m-obj[4][0]]+sale[n][5]);
							}
						}
					}
				}	
			}
		}
	}
	//cout<<pt;
	cout<<dp[obj[0][1]][obj[1][1]][obj[2][1]][obj[3][1]][obj[4][1]];
	return 0;
}












